% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_ccg_data.R
\name{generate_ccg_data}
\alias{generate_ccg_data}
\title{Generate Complex Covariate-Response Data}
\usage{
generate_ccg_data(
  n,
  p,
  mean_xr = 0,
  sd_xr = 1,
  mean_xi = 0,
  sd_xi = 1,
  beta_cardinality = 5,
  noise_power = 1,
  set_snr = TRUE,
  snr_is_linear = TRUE,
  snr_val_linear = 2,
  snr_val_db = 10
)
}
\arguments{
\item{n}{Integer. Number of observations.}

\item{p}{Integer. Number of predictors.}

\item{mean_xr}{Numeric. Mean of the real part of the predictors. Default is 0.}

\item{sd_xr}{Numeric. Standard deviation of the real part of the predictors. Default is 1.}

\item{mean_xi}{Numeric. Mean of the imaginary part of the predictors. Default is 0.}

\item{sd_xi}{Numeric. Standard deviation of the imaginary part of the predictors. Default is 1.}

\item{beta_cardinality}{Integer. Number of non-zero elements in the true beta vector. Default is 5.}

\item{noise_power}{Numeric. The power of the noise. Default is 1. Overridden if set_snr is TRUE.}

\item{set_snr}{Logical. If TRUE, the signal-to-noise ratio (SNR) will be set according to the specified value. Default is TRUE.}

\item{snr_is_linear}{Logical. If TRUE, the SNR value is interpreted as a linear value. If FALSE, the SNR value is interpreted in decibels. Default is TRUE.}

\item{snr_val_linear}{Numeric. The desired signal-to-noise ratio (SNR) as a linear value. Default is 2.}

\item{snr_val_db}{Numeric. The desired signal-to-noise ratio (SNR) in decibels. Default is 10.}
}
\value{
A list with the following elements:
\describe{
\item{X}{Matrix. The generated complex predictor matrix.}
\item{y}{Complex vector. The generated response vector.}
\item{support}{Integer vector. Indices of the non-zero elements in the true beta vector.}
\item{snr_linear}{Numeric. The signal-to-noise ratio used in the data generation process.}
}
}
\description{
This function generates a dataset with complex covariates and a complex response
for use in simulations or modeling.
}
\examples{
# Generate a dataset with 100 observations and 10 predictors
data <- generate_ccg_data(n = 100, p = 10)
str(data)

}
